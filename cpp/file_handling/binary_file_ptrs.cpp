#include <iostream>#include <fstream>#include <string>using namespace std;int main(){	int outputArray[100]; int inputArray[100];	for (int i = 0; i < 100; i++)	{		outputArray[i] = i + 1;	}	ofstream outfile;	outfile.open("binary_output.txt", ios::out | ios::binary);	outfile.write(reinterpret_cast<char*>(&outputArray), sizeof(outputArray));	//fileOutput(outfile, "binary_output.txt");	outfile.close();	ifstream infile;	infile.open("binary_output.txt", ios::in | ios::binary);	infile.read(reinterpret_cast<char*>(&inputArray), sizeof(inputArray));	infile.close();	for (int i = 0; i < 100; i++)	{		cout << inputArray[i] << " ";	}	cout << endl;	if (!infile.eof())	{		cout << "eof not detected" << endl;	}	else	{		infile.seekg(2L, ios::beg); long int fromStart = infile.tellg();		cout << "2 bytes from start of file is " << fromStart << endl;		infile.seekg(2L, ios::end); infile.tellg(); long int fromEnd = infile.tellg();		cout << "2 bytes from end of file is " << fromEnd << endl;	}	return 0;}